<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use Spatie\Permission\Models\Role;
use Spatie\Permission\Models\Permission;

class {{ class }}PermissionSeeder extends Seeder
{
    public function run(): void
    {
        // Reset cached roles and permissions
        app()[\Spatie\Permission\PermissionRegistrar::class]->forgetCachedPermissions();

        // create permissions
        $arrayOfPermissionNames = [
            '{{ class_route_slug }}.index',
            '{{ class_route_slug }}.create',
            '{{ class_route_slug }}.store',
            '{{ class_route_slug }}.edit',
            '{{ class_route_slug }}.update',
            '{{ class_route_slug }}.show',
            '{{ class_route_slug }}.destroy',
            '{{ class_route_slug }}.publish',
            '{{ class_route_slug }}.unpublish',
        ];
        $permissions = collect($arrayOfPermissionNames)->map(function ($permission) {
            return ['name' => $permission, 'guard_name' => 'web'];
        });

        Permission::insert($permissions->toArray());

        // create roles and assign created permissions

        // this can be done as separate statements
        $role = Role::create(['name' => '{{ class_route_slug }}']);
        $role->givePermissionTo(Permission::where('name', 'like', '{{ class_route_slug }}.%')->get());

        $role = Role::firstOrCreate(['name' => 'super-admin']);
        $role->givePermissionTo(Permission::all());
    }
}
